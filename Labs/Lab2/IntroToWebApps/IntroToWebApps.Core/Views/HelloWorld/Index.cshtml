@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<h1>About Me<br /></h1>
<h3>
    Name: Peter Gani<br />
    Student Number: 040-843-285<br />
    Student E-Mail Address: gani0006@live.com<br />
</h3>
<p>
    I'm a 26-year old programmer originating from Indonesia, I previously studied in Animation in a Seattle-based college called DigiPen, but I realized
    not long after that my skills are more geared towards programming. I've been in Canada since 2015 and have been enjoying my time in Algonquin's CET - CS program.
    I've just survived the hardest semester so far, and I am looking forward to this semester as it'll show off my skills as well as test the bonds I've made during my 2 years here, through working together
    on group projects.
</p>
<p>
    I've done a little bit of C# before doing this course, as it was my main focus over my Co-Op experience. Thankfully, it's coming into use quite well here. I am expecting to progress farther along in ASP.NET programming,
    as I believe it's interesting to work on a more Windows-oriented environment. I'd like to learn more about windows-based development in general, and working on the things displayed in this course seem to be a good way to
    advance my skills. Truthfully, Another reason why I think this course will help is that I'd like to delve more into video-game development, as one of the major game engines used on the market utilizes C# in programming its games.
</p>

<h1>Answers</h1>
<h3>
    Q: C# is a strongly or loosely typed language?<br />
</h3>
<p>
    It is a strongly typed language, as it specifies one or more restrictions on how operations involving values of different data types can be intermixed.
</p>
<h3>
    Q: What is a ‘Property’ in C# as it relates to classes and objects?<br />
</h3>
<p>
    A property is a data member that provides a flexible mechanism to read, write, or compute the value of a private field. They can be used as if they are public data members, but they are actually accessor methods.
</p>
<h3>
    Q: Describe the MVC Design Pattern.<br />
</h3>
<p>
    The Model-View-Controller(MVC) Design Pattern is an incredibly useful tool in writing maintainable programs. It seperates business logic from the GUI, making it easier to modify either one without affecting the other. It is made up of three components:<br />
    <ul>
        <li>The Model: Encompasses the data of the application along with the logic that defines how to change or access the data.</li>
        <li>The View: Determines how the data is represented to the user. Typically, this is the GUI.</li>
        <li>The Controller: Reacts to the user's actions and updates the model. It informs the view that the data is ready for display.</li>
    </ul>
    The model stores the content and has no UI. <br />
    The view determines which events can be passed to the Controller<br />
    The controller handles the user-input events and decides whether to translate the events into changes in the model or view.
</p>
<h3>
    Q: Compare ASP.NET WebForms to ASP.NET MVC.<br />
</h3>
<h4>
    ASP.NET WebForms
</h4>
<p>

</p>
<h4>
    ASP.NET MVC
</h4>
<p>

</p>
<h3>
    Q: What is .NET Core?<br />
    A:
</h3>
<h3>
    Q: Open the Person object in the Models Folder. The properties FirstName and LastName have square brackets above them. These statements have a name. These statements have a name, what is it? What do these brackets do?<br />
    A:
</h3>
<h3>
    Q: Where do we store 'static' content in an MVC application?<br />
    A:
</h3>
<h3>
    Q: Describe the purpose of the Program.cs class in this project.<br />
    A:
</h3>
<h3>
    Q: Describe the purpose of the Startup.cs class in this project.<br />
    A:
</h3>
<h3>
    Q: MVC Core applications can 'host' themselves: true or false?<br />
    A:
</h3>
<h3>
    Q: Name the language used to programmatically render HTML in MVC applications.<br />
    A:
</h3>